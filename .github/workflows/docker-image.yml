name: CI and Docker Build

on:
  push:
    branches:
      - github-ci
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Upload Maven Artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build Maven Project
        run: mvn clean install --fail-fast -DskipTests=true

      - name: Upload Maven Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: all-artifacts
          path: |
            backend/backendmarket-monolithic/target/*.jar
            backend/generation/target/*.jar
            backend/Logger/target/*.jar

  docker-build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service:
          - folder: backend/backendmarket-monolithic
            jar: backendmarket-monolithic-0.0.1-SNAPSHOT.jar
            image_name: backendmarket-monolithic
          - folder: backend/generation
            jar: generation-0.0.1-SNAPSHOT.jar
            image_name: generation-service
          - folder: backend/Logger
            jar: logger-0.0.1-SNAPSHOT.jar
            image_name: logger-service
          - folder: front
            image_name: front
          - folder: proxy
            image_name: proxy

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Artifacts
        if: contains(matrix.service.folder, 'backend')
        uses: actions/download-artifact@v3
        with:
          name: all-artifacts

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          cd ${{ matrix.service.folder }}
          image_name=ghcr.io/${{ github.repository }}/${{ matrix.service.image_name }}
          git_sha=$(git rev-parse --short $GITHUB_SHA)

          # If backend, copy the corresponding JAR
          if [[ "${{ matrix.service.folder }}" == backend/* ]]; then
            cp target/${{ matrix.service.jar }} ${{ matrix.service.jar }}
          fi

          # Build the Docker image
          docker build -t $image_name:latest -t $image_name:$git_sha .

          # Push the Docker image
          docker push $image_name:latest
          docker push $image_name:$git_sha
